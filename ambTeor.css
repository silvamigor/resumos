.teor:before{
  counter-increment: contTeor;
  font-weight: bold;
  content: "Teorema " counter(contSec)"."counter(contTeor) ". ";
}
    
.teor[text]:before {
  counter-increment: contTeor;
  content: "Teorema " counter(contSec)"."counter(contTeor) " (" attr(text) "). ";
}
      
.prop:before{
  counter-increment: contProp;
  font-weight: bold;
  content: "Proposição " counter(contSec)"."counter(contProp) ". ";
}
      
.prop[text]:before {
  counter-increment: contProp;
  content: "Proposição " counter(contSec)"."counter(contProp) " (" attr(text)"). ";
}
      
.lema:before{
  counter-increment: contLema;
  font-weight: bold;
  content: "Lema " counter(contSec)"."counter(contLema) ". ";
}
      
.lema[text]:before {
  counter-increment: contLema;
  content: "Lema " counter(contSec)"."counter(contLema) " (" attr(text)"). ";
}

.coro:before{
  counter-increment: contCoro;
  font-weight: bold;
  content: "Corolário " counter(contSec)"."counter(contCoro) ". ";
}
      
.coro[text]:before {
  counter-increment: contCoro;
  content: "Corolário " counter(contSec)"."counter(contCoro) " (" attr(text)"). ";
}
      
.obs:before{
  counter-increment: contObs;
  font-weight: bold;
  content: "Observação " counter(contSec)"."counter(contObs) ". ";
}
      
.def:before{
  counter-increment: contDef;
  font-weight: bold;
  content: "Definição " counter(contSec)"."counter(contDef) ". ";
}

.fim:after{
  content: "\25A2";
  float:right;
}

.exerc:before{
  counter-increment: contExerc;
  font-weight: bold;
  content: "Exercício " counter(contSec)"."counter(contExerc) ". ";
}

.exerc[text]:before {
  font-weight: bold;
  content: "Exercício " attr(text)". ";
}
      
.sol:before {
  font-weight: bold;
  content: "Solução. ";
}
      
.cqd:after {
  content: "\25FC";
  float:right;
}

.exemplo:before{
  counter-increment: contExemplo;
  font-weight: bold;
  content: "Exemplo " counter(contSec)"."counter(contExemplo) ". ";
}

.itemAlfaNoIdent:before {
  counter-increment: contItemANI;
  content:"(" counter(contItemANI, lower-alpha)") ";
}
      
.itemRomanoNoIdent:before {
  counter-increment: contItemRNI;
  content:"(" counter(contItemRNI, lower-roman)") ";
}
      
.itemNumericoNoIdent:before {
  counter-increment: contItemNNI;
  content:"(" counter(contItemNNI)") ";
}
